# prefix キーを C-t に変更する
unbind C-b
set -g prefix C-t
bind C-t send-prefix

# ウィンドウのインデックスを 1 から始める
set -g base-index 1

# ペインのインデックスを 1 から始める
setw -g pane-base-index 1

# ウィンドウの自動リネーム off
set-window-option -g automatic-rename off

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Vim のキーバインドでペインを作る
bind v split-window -hc "#{pane_current_path}"
bind s split-window -vc "#{pane_current_path}"

# Emacs のキーバインドでペインを移動する
bind b select-pane -L
bind n select-pane -D
bind p select-pane -U
bind f select-pane -R

# Emacs のキーバインドでペインをリサイズする
bind -r C-b resize-pane -L 10
bind -r C-n resize-pane -D 5
bind -r C-p resize-pane -U 5
bind -r C-f resize-pane -R 10

# 256 色端末を使用する
set -g default-terminal "screen-256color"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# アクティブなウィンドウを目立たせる
setw -g window-status-current-attr reverse

# ペインボーダーの色を設定する
set -g pane-border-fg black
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# コマンドラインの色を設定する
set -g message-fg black
set -g message-bg white
set -g message-attr bright

# ステータスバーを設定する
## 上に表示する
set -g status-position top
## 右パネルを設定する
set -g status-right "#[fg=black][%Y-%m-%d(%a) %H:%M]"
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# 複数のセッションを移動する
bind-key N switch-client -n
bind-key P switch-client -p

# 全てのベルを無視
set-option -g bell-action none

# 履歴を 5000 まで記録
set-option -g history-limit 5000

# vim の Esc の効きを良くする
set-option -sg escape-time 10

# コピーモードのキーバインドを vi にする
# set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-t h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-t j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-t k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-t l"  "select-pane -R"
bind-key \ if-shell "$is_vim" "send-keys C-t \\" "select-pane -l"
